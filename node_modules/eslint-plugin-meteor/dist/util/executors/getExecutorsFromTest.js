'use strict';

var _Set = require('babel-runtime/core-js/set')['default'];

var _interopRequireDefault = require('babel-runtime/helpers/interop-require-default')['default'];

Object.defineProperty(exports, '__esModule', {
  value: true
});
exports['default'] = getExecutorsFromTest;

var _invariant = require('invariant');

var _invariant2 = _interopRequireDefault(_invariant);

var _astIsMeteorProp = require('../ast/isMeteorProp');

var _astIsMeteorProp2 = _interopRequireDefault(_astIsMeteorProp);

var _sets = require('./sets');

var _invert = require('./invert');

var _invert2 = _interopRequireDefault(_invert);

// Nodes -> Set

function getExecutorsFromTest(test) {
  switch (test.type) {
    case 'MemberExpression':
      if ((0, _astIsMeteorProp2['default'])(test, 'isClient')) {
        return new _Set(['browser', 'cordova']);
      } else if ((0, _astIsMeteorProp2['default'])(test, 'isServer')) {
        return new _Set(['server']);
      } else if ((0, _astIsMeteorProp2['default'])(test, 'isCordova')) {
        return new _Set(['cordova']);
      }
      return (0, _invariant2['default'])(false, 'Unkown Meteor prop should never be reached');
    case 'UnaryExpression':
      return (0, _invert2['default'])(getExecutorsFromTest(test.argument));
    case 'LogicalExpression':
      if (test.operator === '&&') {
        return (0, _sets.intersection)(getExecutorsFromTest(test.left), getExecutorsFromTest(test.right));
      } else if (test.operator === '||') {
        return (0, _sets.union)(getExecutorsFromTest(test.left), getExecutorsFromTest(test.right));
      }
      return (0, _invariant2['default'])(false, 'Unkown operator should never be reached');
  }
}

module.exports = exports['default'];