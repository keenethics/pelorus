'use strict';

var _toConsumableArray = require('babel-runtime/helpers/to-consumable-array')['default'];

var _Set = require('babel-runtime/core-js/set')['default'];

var _interopRequireDefault = require('babel-runtime/helpers/interop-require-default')['default'];

Object.defineProperty(exports, '__esModule', {
  value: true
});
exports.difference = difference;
exports.union = union;
exports.intersection = intersection;

var _invariant = require('invariant');

var _invariant2 = _interopRequireDefault(_invariant);

// Set -> Set -> Set

function difference(a, b) {
  (0, _invariant2['default'])(!!a, 'difference: Set a is not defined');
  (0, _invariant2['default'])(!!b, 'difference: Set b is not defined');
  return new _Set([].concat(_toConsumableArray(a)).filter(function (x) {
    return !b.has(x);
  }));
}

// Set -> Set -> Set

function union(a, b) {
  (0, _invariant2['default'])(!!a, 'union: Set a is not defined');
  (0, _invariant2['default'])(!!b, 'union: Set b is not defined');
  return new _Set([].concat(_toConsumableArray(a), _toConsumableArray(b)));
}

// Set -> Set -> Set

function intersection(a, b) {
  (0, _invariant2['default'])(!!a, 'intersection: Set a is not defined');
  (0, _invariant2['default'])(!!b, 'intersection: Set b is not defined');
  return new _Set([].concat(_toConsumableArray(a)).filter(function (element) {
    return b.has(element);
  }));
}