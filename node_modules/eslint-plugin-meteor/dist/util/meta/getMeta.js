'use strict';

var _interopRequireDefault = require('babel-runtime/helpers/interop-require-default')['default'];

Object.defineProperty(exports, '__esModule', {
  value: true
});
exports['default'] = getMeta;

var _path = require('path');

var _path2 = _interopRequireDefault(_path);

var _getMeteorMeta = require('./getMeteorMeta');

var _getMeteorMeta2 = _interopRequireDefault(_getMeteorMeta);

var _getEnvFromComments = require('./getEnvFromComments');

var _getEnvFromComments2 = _interopRequireDefault(_getEnvFromComments);

var _getRelativePath = require('./getRelativePath');

var _getRelativePath2 = _interopRequireDefault(_getRelativePath);

var _lodashMemoize = require('lodash.memoize');

var _lodashMemoize2 = _interopRequireDefault(_lodashMemoize);

var memoizedGetMeteorMeta = (0, _lodashMemoize2['default'])(_getMeteorMeta2['default']);
var memoizedGetRelativePath = (0, _lodashMemoize2['default'])(_getRelativePath2['default']);

function getMeta(context) {
  var filename = context && context.getFilename();

  var normalizedFilename = filename;

  // Received a relative path. This is probably from SublimeLinter
  if (filename[0] !== _path2['default'].sep && filename !== '<input>') {
    normalizedFilename = _path2['default'].join(process.cwd(), _path2['default'].basename(filename));
  }

  var meta = memoizedGetMeteorMeta(memoizedGetRelativePath(normalizedFilename));

  var envFromComments = (0, _getEnvFromComments2['default'])(context.getSourceCode().getAllComments());
  if (envFromComments) {
    meta.env = envFromComments;
  }

  return meta;
}

module.exports = exports['default'];